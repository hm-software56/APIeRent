<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;

/**
 * This is the base-model class for table "province".
 *
 * @property integer $id
 * @property string $name
 * @property string $code
 *
 * @property \app\models\District[] $districts
 * @property \app\models\PropertiesDetail[] $propertiesDetails
 * @property \app\models\ProvinceTranslate[] $provinceTranslates
 * @property string $aliasModel
 */
abstract class Province extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'province';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name'], 'required'],
            [['name'], 'string', 'max' => 255],
            [['code'], 'string', 'max' => 100]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('models', 'ID'),
            'name' => Yii::t('models', 'Name'),
            'code' => Yii::t('models', 'Code'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDistricts()
    {
        return $this->hasMany(\app\models\District::className(), ['province_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPropertiesDetails()
    {
        return $this->hasMany(\app\models\PropertiesDetail::className(), ['province_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProvinceTranslates()
    {
        return $this->hasMany(\app\models\ProvinceTranslate::className(), ['province_id' => 'id']);
    }




}
