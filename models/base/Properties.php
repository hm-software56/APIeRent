<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;

/**
 * This is the base-model class for table "properties".
 *
 * @property integer $id
 * @property integer $status
 * @property string $date_start
 * @property string $date_end
 * @property double $longtitude
 * @property double $lattitude
 * @property string $date_update
 * @property string $date_create
 * @property integer $packages_id
 * @property integer $user_id
 * @property integer $properties_type_id
 *
 * @property \app\models\AlertPackage[] $alertPackages
 * @property \app\models\Comments[] $comments
 * @property \app\models\LikeProperty[] $likeProperties
 * @property \app\models\Photo[] $photos
 * @property \app\models\Packages $packages
 * @property \app\models\PropertiesType $propertiesType
 * @property \app\models\User $user
 * @property \app\models\PropertiesDetail[] $propertiesDetails
 * @property string $aliasModel
 */
abstract class Properties extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'properties';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['status', 'date_start', 'date_end', 'date_create', 'packages_id', 'user_id', 'properties_type_id'], 'required'],
            [['status', 'packages_id', 'user_id', 'properties_type_id'], 'integer'],
            [['date_start', 'date_end', 'date_update', 'date_create'], 'safe'],
            [['longtitude', 'lattitude'], 'number'],
            [['packages_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Packages::className(), 'targetAttribute' => ['packages_id' => 'id']],
            [['properties_type_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\PropertiesType::className(), 'targetAttribute' => ['properties_type_id' => 'id']],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\User::className(), 'targetAttribute' => ['user_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('models', 'ID'),
            'status' => Yii::t('models', 'Status'),
            'date_start' => Yii::t('models', 'Date Start'),
            'date_end' => Yii::t('models', 'Date End'),
            'longtitude' => Yii::t('models', 'Longtitude'),
            'lattitude' => Yii::t('models', 'Lattitude'),
            'date_update' => Yii::t('models', 'Date Update'),
            'date_create' => Yii::t('models', 'Date Create'),
            'packages_id' => Yii::t('models', 'Packages ID'),
            'user_id' => Yii::t('models', 'User ID'),
            'properties_type_id' => Yii::t('models', 'Properties Type ID'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAlertPackages()
    {
        return $this->hasMany(\app\models\AlertPackage::className(), ['properties_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getComments()
    {
        return $this->hasMany(\app\models\Comments::className(), ['properties_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getLikeProperties()
    {
        return $this->hasMany(\app\models\LikeProperty::className(), ['properties_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPhotos()
    {
        return $this->hasMany(\app\models\Photo::className(), ['main_photo' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPackages()
    {
        return $this->hasOne(\app\models\Packages::className(), ['id' => 'packages_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPropertiesType()
    {
        return $this->hasOne(\app\models\PropertiesType::className(), ['id' => 'properties_type_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(\app\models\User::className(), ['id' => 'user_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPropertiesDetails()
    {
        return $this->hasMany(\app\models\PropertiesDetail::className(), ['properties_id' => 'id']);
    }




}
